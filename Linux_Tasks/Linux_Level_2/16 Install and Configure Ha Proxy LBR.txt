Question:16. There is a static website running in Stratos Datacenter. They have already configured the app servers and code is already deployed there. 
To make it work properly, they need to configure LBR server. There are number of options for that, but team has decided to go with HAproxy. 
FYI, apache is running on port 8083 on all app servers. Complete this task as per below details.

a. Install and configure HAproxy on LBR server using yum only and make sure all app servers are added to HAproxy load balancer. 
HAproxy must serve on default http port (Note: Please do not remove stats socket /var/lib/haproxy/stats entry from haproxy default config.).

b. Once done, you can access the website using StaticApp button on the top bar.

Answer:

Important Note:
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x

#. At first you need to log in to all the app servers and find the Listen port & need to start the httpd services.

#. I have shown only for stapp01.

1. Login on App server  ssh tony@stapp01

		 thor@jump_host/$ssh tony@stapp01

2. Switch to  root user : sudo su -

		 [root@stapp01 ~]#sudo su -

3. displays all lines in the Apache configuration file that contain the word “Listen”, which specifies the ports Apache is configured to listen on. 

		 #cat /etc/http/conf.httpd.cong | grep Listen

			Output:
				[root@stapp01 ~]# cat /etc/httpd/conf/httpd.conf Igrep Listen 
				#Listen: Allows you to bind Apache to specific IP addresses and/or 
				#Change this to listen on specific IP addresses as shown below to #Est 12.34.56.78:80 
				Listen 8083
		
4. Enable httpd & start the service

		[root@stapp01 ~]#systemctl start httpd
		
		[root@stapp01 ~]#systemctl enable httpd
		
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x

Step 1: Login to the LBR Server
Open your terminal.
SSH into the LBR server:
	
		 [root@stlb01 ~]#ssh loki@stlb01

Step 2: Install HAProxy
Switch to the root user:

		 [root@stlb01 ~]#sudo su -

> Install HAProxy using yum:

		 [root@stlb01 ~]#yum install -y haproxy

Step 3: Configure HAProxy
Open the HAProxy configuration file in a text editor:

		 [root@stlb01 ~]#vi /etc/haproxy/haproxy.cfg

Ensure the stats socket entry is present:
stats socket /var/lib/haproxy/stats

		 [root@stlb01 ~]#cat /etc/haproxy/haproxy.cfg | grep haproxy/stats

Add the following configuration to include your app servers (assuming you have three app servers with IPs 172.16.238.10, 172.16.238.11, and 172.16.238.12 running Apache on port 8083):

----------------------HAproxy Entry----------------------------------
frontend http_front
    bind *:80
    default_backend http_back

backend http_back
    balance roundrobin
    server stapp01	172.16.238.10:8083 check
    server stapp02	172.16.238.11:8083 check
    server stapp03	172.16.238.12:8083 check

---------------------------------------------------------------------
 
# Validate the haproxy configuration file by running the below command

		 [root@stlb01 ~]#haproxy -f /etc/haproxy/haproxy.cfg


Step 4: Start and Enable HAProxy

	Start the HAProxy service:
		 [root@stlb01 ~]#systemctl start haproxy

	Enable HAProxy to start on boot:
		 [root@stlb01 ~]#systemctl enable haproxy

Step 5: Verify the Configuration
Check the status of HAProxy to ensure it’s running correctly:

		 [root@stlb01 ~]#systemctl status haproxy

You can also check the HAProxy stats by connecting to the stats socket:

		 [root@stlb01 ~]#echo "show stat" | socat unix-connect:/var/lib/haproxy/stats stdio

Step 6: Access the Website
Open a web browser.(top on command line static link be availaible)

Navigate to the IP address or domain name of your LBR server. You should see your static website being served through HAProxy.

This setup ensures that HAProxy is installed and configured to load balance traffic across your app servers running Apache on port 8083. 
